/* Better Debouncer
 * 
 * This debouncing circuit is more rugged, and will work with tilt switches!
 *
 * http://www.ladyada.net/learn/sensor/tilt.html
 */
 
int inPin1 = 2;         // the number of the input pin
int outPin1 = 13;       // the number of the output pin
 
int inPin2 = 3;         // the number of the input pin
int outPin2 = 12;       // the number of the output pin

 
int inPin3 = 4;         // the number of the input pin
int outPin3 = 11;       // the number of the output pin
 
int LEDstate1 = HIGH;      // the current state of the output pin
int LEDstate2 = HIGH;      // the current state of the output pin
int LEDstate3 = HIGH;      // the current state of the output pin

int reading1;           // the current reading from the input pin
int reading2;           // the current reading from the input pin
int reading3;           // the current reading from the input pin

int previous1 = LOW;    // the previous reading from the input pin
int previous2 = LOW;    // the previous reading from the input pin
int previous3 = LOW;    // the previous reading from the input pin
 
// the follow variables are long's because the time, measured in miliseconds,
// will quickly become a bigger number than can be stored in an int.
long time1 = 0;         // the last time the output pin was toggled
long debounce1 = 50;   // the debounce time, increase if the output flickers
long time2 = 0;         // the last time the output pin was toggled
long debounce2 = 50;   // the debounce time, increase if the output flickers
long time3 = 0;         // the last time the output pin was toggled
long debounce3 = 50;   // the debounce time, increase if the output flickers
 
void setup()
{
  pinMode(inPin1, INPUT);
  digitalWrite(inPin1, HIGH);   // turn on the built in pull-up resistor
  pinMode(outPin1, OUTPUT);

    pinMode(inPin2, INPUT);
  digitalWrite(inPin2, HIGH);   // turn on the built in pull-up resistor
  pinMode(outPin2, OUTPUT);

    pinMode(inPin3, INPUT);
  digitalWrite(inPin3, HIGH);   // turn on the built in pull-up resistor
  pinMode(outPin3, OUTPUT);
}
 
void loop()
{
  int switchstate1;
  int switchstate2;
  int switchstate3;
 
  reading1 = digitalRead(inPin1);
  reading2 = digitalRead(inPin2);
  reading3 = digitalRead(inPin3);
 
  // If the switch changed, due to bounce or pressing...
  if (reading1 != previous1) {
    // reset the debouncing timer
    time1 = millis();
  } 
  if (reading2 != previous2) {
    // reset the debouncing timer
    time2 = millis();
  } 
  if (reading3 != previous3) {
    // reset the debouncing timer
    time3 = millis();
  } 
   
  if ((millis() - time1) > debounce1) {
     // whatever the switch is at, its been there for a long time
     // so lets settle on it!
     switchstate1 = reading1;
       if ((millis() - time2) > debounce2) {
     // whatever the switch is at, its been there for a long time
     // so lets settle on it!
     switchstate2 = reading2;
       if ((millis() - time3) > debounce3) {
     // whatever the switch is at, its been there for a long time
     // so lets settle on it!
     switchstate3 = reading3;
 
     // Now invert the output on the pin13 LED
    if (switchstate1 == HIGH)
      LEDstate1 = LOW;
    else
      LEDstate1 = HIGH;
  }
  digitalWrite(outPin1, LEDstate1);
   if (switchstate2 == HIGH)
      LEDstate2 = LOW;
    else
      LEDstate2 = HIGH;
  }
  digitalWrite(outPin2, LEDstate2);
   if (switchstate3 == HIGH)
      LEDstate3 = LOW;
    else
      LEDstate3 = HIGH;
  }
  digitalWrite(outPin3, LEDstate3);
 
  // Save the last reading so we keep a running tally
  previous1 = reading1;
    previous2 = reading2;
      previous3 = reading3;
}
